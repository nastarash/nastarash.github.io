3. Querying Restaurants Collection :

Answer the following questions and include both query and the result (if applicable) into your report:

1. How many “Chinese” (cuisine) restaurants are in “Queens” (borough)?
> db.restaurants.find({cuisine: "Chinese",borough:"Queens"}).count()
728

2. What is the _id of the restaurant which has the grade with the highest ever score?

> db.restaurants.find({},{"_id":1}).sort({"grades.score":-1}).limit(1)
{ "_id" : ObjectId("5c0bd35f88627471d0268bfe") }

3. Add a grade { grade: "A", score: 7, date: ISODate() } to every restaurant in “Manhattan” (borough).

> db.restaurants.update({borough:"Manhattan"},{$push:{grades:{grade:"A",score:7,date:ISODate()}}},{multi:true})
WriteResult({ "nMatched" : 10259, "nUpserted" : 0, "nModified" : 10259 })

4. What are the names of the restaurants which have a grade at index 8 with score less then 7? Use projection to
include only names without _id.

> db.restaurants.find({"grades.8.score":{$lt:7}},{"name":1,"_id":0})
{ "name" : "Silver Krust West Indian Restaurant" }
{ "name" : "Pure Food" }

5. What are _id and borough of “Seafood” (cuisine) restaurants which received at least one “B” grade in period from
2014-02-01 to 2014-03-01? Use projection to include only _id and borough

> db.restaurants.find({grades:{$elemMatch:{"date":{$gte:ISODate("2014-02-01T00:00:00.000Z"),$lte:ISODate("2014-03-01T00:00:00.000Z")},"grade":"B"}},"cuisine":"Seafood"},{"borough":1})
{ "_id" : ObjectId("5c0bd36188627471d026c00a"), "borough" : "Bronx" }
{ "_id" : ObjectId("5c0bd36188627471d026c282"), "borough" : "Manhattan" }
